         MACRO
.* ----------------------------------------------------
.* Generate entries for ISPF/TSO logon proc table
.*  for Aramark.
.*
.*  Macro parms:
.*    USER        - TSO userid
.*    PFX         - panels prefix for this userid
.*                  (3 bytes long, e.g. SYS)
.*    LOGOFF      - YesÂ¦No   user will/will not be logged off
.*                           after exit from ISPF
.*    CMD         - initial ispf command;
.*                  ISPSTART cmd is issued after allocations.
.*
.*    defaults:
.*
.*    LOGOFF=YES
.*    CMD         - PANEL(xxx@MSTR) NOLOGO, where xxx is
.*                   a panel prefix. For example, if prefix
.*                   is set to AXB and CMD not specified,
.*                   PANEL(AXB@MSTR) NOLOGO is generated as
.*                   initial ISPF command.
.*
.* 01/2001 axb
.* ----------------------------------------------------
.* Changes:
.*
.* 03/2001 axb   initial panel is always ISR@PRIM
.* ----------------------------------------------------
&NM      LGNUDEFN &USER=,&PFX=,&LOGOFF=YES,&CMD=,&DSECT=NO,&VART=NO
         AIF   ('&DSECT' EQ 'YES').DSECT
         AIF   ('&VART'  EQ 'YES').VART
.* gen a bunch of ptrs; LGNUDEFP will fill them up.
         GBLB  &NFIRST
         AIF   (&NFIRST).SKIPHDR
&NFIRST  SETB  1                        not first time
UDEFHDR  DS    0F        header; is filled up below
         DS    AL4(0)                   table address
         DS    AL4(0)                   last entry address
         DS    AL4(0)                   entry length
         DS    AL4(0)                   key length
.SKIPHDR ANOP
.* make sure nothing is missing.
         AIF   ('&USER' EQ '').NOUSER
         AIF   ('&PFX' EQ '').NOPFX
         AIF   (K'&PFX NE 3).BADPFX
&OFF     SETC  '0'
         AIF   ('&LOGOFF' EQ 'N' OR '&LOGOFF' EQ 'NO').JOFF
&OFF     SETC  '1'
         AIF   ('&LOGOFF' EQ 'Y' OR '&LOGOFF' EQ 'YES').JOFF
         AGO   .BADOFF
.JOFF    ANOP
.* set a default for the initial command in case CMD parm is
.*     not used
.* 0301axb &CMDP    SETC  'PANEL(&PFX.@MSTR) NOLOGO'     default
&CMDP    SETC  'PANEL(ISR@PRIM) NOLOGO'     default
         AIF   ('&CMD' EQ '').JCMD
&CMDP    SETC  '&CMD'
         AIF   ('&CMDP'(1,1) NE '''').JCMD    leading quotes
&CMDP    SETC  '&CMDP'(2,K'&CMDP-2)
.JCMD    ANOP
.* see if this command has already been declared
         GBLA  &CMDC           ; count of entries - unique commands
         GBLC  &CMDE(1)        ; unique commands
         AIF   (&CMDC EQ 0).NOTYET   first time
.* search thru defined commands.
&CNT     SETA  1
.TOPCMD  ANOP
&TEMP    SETC  '&CMDE(&CNT)'
         AIF   ('&TEMP' EQ '&CMDP').SEEN
&CNT     SETA  &CNT+1
         AIF   (&CNT LE &CMDC).TOPCMD
.*
.* new entry
.*
.NOTYET  ANOP
&CMDC    SETA  &CMDC+1               one more unique command
&CMDE(&CMDC) SETC '&CMDP'            another global to use
&LBL     SETC  'CMD&CMDC'            entry label
&LBLL    SETC  'LCMD&CMDC'           size
&LBL     DC    AL1(&LBLL),C'&CMDP'   ; unique ISPF command
&LBLL    EQU   *-&LBL-1              ; command size
         AGO   .GENENT
.*
.* This is not unique entry
.*
.SEEN    ANOP
&LBL     SETC  'CMD&CNT'            point to prev. defined label
.*
.GENENT  ANOP
.* Gen the table entry - add to in-storage globals.
         GBLA  &OMLC           ; count of entries
         GBLC  &OMLU(1)        ; users
         GBLC  &OMLP(1)        ; prefixes
         GBLC  &OMLL(1)        ; logoff's
         GBLC  &OMLI(1)        ; initial commands
&OMLC    SETA  &OMLC+1           incr count of entries
.* pad the user to be the same size for sort to work.
&USERN   SETC  '&USER.>>>>>>>'
&USERN   SETC  '&USERN'(1,7)
&OMLU(&OMLC) SETC '&USERN'       insert user
&OMLP(&OMLC) SETC '&PFX'         insert prefix
&OMLL(&OMLC) SETC '&OFF'         insert logoff
&OMLI(&OMLC) SETC '&LBL'         insert initial command
.*
.* eventually entries are sorted - that's what is created.
.*
.*       DC    CL7'&USER'         ; Userid
.*       DC    CL3'&PFX'          ; Panels prefix
.*       DC    CL1'&OFF'          ; Logoff
.*       DC    AL4(&LBL)          ; ptr to initial ispf command
         MEXIT
.* -------------------------------------------------------
.* Generate DSECTs for the module that loops thru the table
.* -------------------------------------------------------
.DSECT   ANOP
DUDEF    DSECT
DU@USR   DS    CL7                ; Userid
DU@PFX   DS    CL3                ; Prefix
DU@OFF   DS    CL1                ; Logoff
DU@CMD   DS    AL4                ; ptr to Initial ISPF command
LDUDEF   EQU   *-DUDEF            ; entry size.
*
DUVART   DSECT
DUVARL   DS    AL2                ; var name size
DUVAR    DS    CL8                ; var name value
DUVARD   DS    AL2                ; var displacement
DUVARVL  DS    AL2                ; var size, strip blanks.
LDUVART  EQU   *-DUVART
         MEXIT
.* -------------------------------------------------------
.* Generate REXX vars table - same module
.* -------------------------------------------------------
.VART    ANOP
UVARTCNT DS    0H
         DC    AL2(UVARCNT)       ; that many rexx vars to set
UVART  DC AL2(6),CL8'DU@USR',AL2(DU@USR-DUDEF),AL2(L'DU@USR)
UVARTSZ  EQU   *-UVART            see LDUVART in dsect
       DC AL2(6),CL8'DU@PFX',AL2(DU@PFX-DUDEF),AL2(L'DU@PFX)
       DC AL2(6),CL8'DU@OFF',AL2(DU@OFF-DUDEF),AL2(L'DU@OFF)
       DC AL2(6),CL8'DU@CMD',AL2(DU@CMD-DUDEF),AL2(0)
UVARCNT  EQU   (*-UVART)/UVARTSZ   that many rexx vars to set
         MEXIT
.*
.* Error messages
.*
.NOUSER ANOP
 MNOTE 12,'UDEF001E User is not specified'
         MEXIT
.NOPFX  ANOP
 MNOTE 12,'UDEF002E Prefix is not specified'
         MEXIT
.BADPFX ANOP
 MNOTE 12,'UDEF003E Prefix is not correct, should be 3 bytes long'
         MEXIT
.BADOFF ANOP
 MNOTE 12,'UDEF004E Logoff parm should be either YES, Y, NO or N'
         MEXIT
         MEND
