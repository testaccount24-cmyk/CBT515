         MACRO
&NM      LGNUDEFP
.* -------------------------------------------------------
.* Sort all the entries defined previously by UDEFN macro
.*   and generate an assembler table.
.*
.* Bubble sort is used, performance is not a consideration.
.*
.* This is REXX code for reference:
.*
.*   srtflg = 1
.*   lstsz = omlu.0
.*   do while srtflg = 1
.*      srtflg = 0
.*       do i = 1 to lstsz - 1
.*             j = i +1
.*             if omlu.i > omlu.j then
.*                  do
.*                     srtflg = 1
.*                     temp = omlu.j
.*                     omlu.j = omlu.i
.*                     omlu.i = temp
.*                  end /* do */
.*       end i /* do */
.*        lstsz = lstsz - 1
.*   end /* do */
.*
.* Note that duplicate entries are not accepted.
.*
.* 01/2001 axb
.*
.* Note that if you defined too many entries,
.*  ACTR needs to be adjusted.
.*
.* -------------------------------------------------------
         GBLA  &OMLC              count of entries
         GBLC  &OMLU(1)           users
         GBLC  &OMLP(1)           prefixes
         GBLC  &OMLL(1)           logoff's
         GBLC  &OMLI(1)           initial ispf commands
.*
         AIF   ('&OMLC' EQ '0').ORDER
.*
.* Sort the entries by userid - simple bubble sort
.*   some changes from REXX - dont use DO ... END constructs
.*
.*
&SRTFLG  SETB  1
&LSTSZ   SETA  &OMLC
.LAB1    ANOP
         AIF   (NOT &SRTFLG).OUT
&SRTFLG  SETB  0
&I       SETA  1
.LAB2    ANOP
&J       SETA  &I+1
         AIF   ('&OMLU(&I)' LT '&OMLU(&J)').LAB2E
         AIF   ('&OMLU(&I)' EQ '&OMLU(&J)').DUP
&SRTFLG  SETB  1
.*
.* swap the elements - start
.*
.* -> user
&TEMP    SETC  '&OMLU(&J)'
&OMLU(&J) SETC '&OMLU(&I)'
&OMLU(&I) SETC '&TEMP'
.* -> prefix
&TEMP    SETC  '&OMLP(&J)'
&OMLP(&J) SETC '&OMLP(&I)'
&OMLP(&I) SETC '&TEMP'
.* -> logoff
&TEMP    SETC  '&OMLL(&J)'
&OMLL(&J) SETC '&OMLL(&I)'
&OMLL(&I) SETC '&TEMP'
.* -> ispf
&TEMP    SETC  '&OMLI(&J)'
&OMLI(&J) SETC '&OMLI(&I)'
&OMLI(&I) SETC '&TEMP'
.*
.* swap the elements - end
.*
.*
.LAB2E   ANOP
&I       SETA  &I+1
&LST2    SETA  &LSTSZ-1
         AIF   (&I LE &LST2).LAB2
&LSTSZ   SETA  &LSTSZ-1
         AGO   .LAB1

.*
.* done sorting. Create Header.
.*
.OUT     ANOP
         ORG   UDEFHDR                  ; beginning of module
         DC    AL4(TAB@1)               ; table address
         DC    AL4(TAB@&OMLC)           ; last entry address
         DC    AL4(7+3+1+4)             ; lentry length
         DC    AL4(7)                   ; key length
         ORG   ,                        ; back to entries
.*
.* Generate all entries
.*
&CNT     SETA  1

.GENLOOP ANOP
&USR     SETC  '&OMLU(&CNT)'      user
&PFX     SETC  '&OMLP(&CNT)'      prefix
&OFF     SETC  '&OMLL(&CNT)'      logoff
&CMD     SETC  '&OMLI(&CNT)'      ispf command
.*
.* Remove the pad from a user entry (added for sort)
.*
&LAST    SETA  K'&USR
.PAD1    ANOP
&TMP     SETC  '&USR'(&LAST,1)
         AIF   ('&TMP' NE  '>').BPAD
&LAST    SETA  &LAST-1
         AGO   .PAD1
.BPAD    ANOP
&USRT    SETC  '&USR'(1,&LAST)
.*
.*
TAB@&CNT DC    CL7'&USRT'         ; User
         DC    CL3'&PFX'          ; prefix
         DC    CL1'&OFF'          ; logoff
         DC    AL4(&CMD)          ; ptr to ispf command
.*
&CNT     SETA  &CNT+1
         AIF   (&CNT LE &OMLC).GENLOOP
.*
         MEXIT
.*
.* Error messages
.*
.ORDER   ANOP
 MNOTE 12,'UDEFP001E Count is zero - no entries'
         MEXIT
.DUP     ANOP
&USR     SETC  '&OMLU(&I)'      user
.*
.* Remove the pad from a user entry (added for sort)
.*
&LAST    SETA  K'&USR
.PAD2    ANOP
&TMP     SETC  '&USR'(&LAST,1)
         AIF   ('&TMP' NE  '>').BPAD2
&LAST    SETA  &LAST-1
         AGO   .PAD2
.BPAD2   ANOP
&USRT    SETC  '&USR'(1,&LAST)
 MNOTE 12,'UDEFP002E Duplicate macro for user &USRT'
         MEXIT
         MEND
