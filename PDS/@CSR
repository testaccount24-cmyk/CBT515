@CSR     CSECT
@CSR     AMODE 31
@CSR     RMODE ANY
         SAVE  (14,12),,@CSR.AXB.&SYSDATE.&SYSTIME
         LR    R12,R15
         USING @CSR,R12
         LR    R6,R1             ; Plist address
         USING @CSRPL,R6
         CLC   @CSREYE(4),=CL4'@CSR'  ; Correct call?
         BNE   EXIT8             ; No
         XR    R15,R15           ; Error code
***********************************************************************
*  I lifted this code from BR program in file 183 on CBT tape         *
*  and changed it a little.                                           *
***********************************************************************
*        Scan data at the cursor position for a dsname                *
*                                                                     *
*        Some of this code has been lifted from ISPCDSN,              *
*        (file 270 of the CBT tape), I hope they don't mind.          *
*                                                                     *
*        The TLD address is retrieved from ISPTASK's register 1,      *
*        as done by ISPEXEC and ISPLINK.  If BR is invoked as a       *
*        program, ISPF passes the TLD address in the second word      *
*        of the parameter list built by the SELECT service; when      *
*        BR is invoked as a command, no TLD address is passed, as     *
*        far as I know.                                               *
*  TLD pointers (decimal):                                            *
*    +128    - current screen image                                   *
*    +166    - offset to cursor                                       *
*    +192    - screen width                                           *
*    +344    - current  panelid                                       *
*    +352    - previous panelid                                       *
*                                                                     *
***********************************************************************
         USING PSA,0
CURSOR   L     R1,PSATOLD              PSATOLD (MY TCB)
         USING TCB,R1
*LOOP
CURSOR11 L     R2,TCBFSA               TCBFSA - save area.
         CLI   40(R2),C'I'             R5 SLOT CONTAINS 'ISPF'
         BNE   CURSOR14                NO, JUMP
         CLI   24(R2),X'00'            IS R1 A 24-BIT ADDR?
         BNE   CURSOR14                NO, JUMP
         ICM   R2,B'1111',24(R2)       R1 SLOT (ADDR OF TLD PTR)
         BZ    CURSOR14                NO, JUMP
         CLI   0(R2),X'00'             IS IT A CLEAN 24-BIT ADDR?
         BNE   CURSOR14                NO, JUMP
         L     R2,0(,R2)               R2->TLD
         CLC   =C'TLD',0(R2)           IS THIS REALLY A TLD?
         BE    CURSOR19                YES, EXIT LOOP
CURSOR14 L     R1,TCBOTC               TCBOTC (MOTHER TASK)
         CL    R1,TCBJSTCB             IS IT THE JSTCB?
         BNE   CURSOR11                NO, CHECK FOR A TLD
*ENDLOOP
*  TLD not found.
         B     EXIT8                   ; exit with "no-dsname" rc
         DROP  R1                      ; TCB addressability
*
*        TLD located, now get the line address and cursor
*        position.
*
CURSOR19 SLR   R0,R0
         LH    R1,166(,R2)             get cursor offset (TLDCSR)
         L     R3,192(,R2)             screen width (TLDCLSWD)
         ST    R3,DTLSZ                ; will be dataline size
         DR    R0,R3                   get line # (R0) and offset (R1)
         LR    R5,R0                   cursor offset in line
         MR    R0,R3                   get offset to current line
         AL    R1,096(,R2)             change offset to addr (TLDCLSP)
         LR    R4,R1                   Current line in screen image
         LA    R5,1(,R5)               ; Cursor column
         ST    R5,CURPOSC              ; ... 1-based
* Copy the current line to a buffer; R3 is still a screen width.
*--------------------------------------------------------------------+
         BCT   R3,*+10                 ; Around executed instruction ³
         MVC   DATALINE(0),0(R4)       ; *** executed ***            ³
         EX    R3,*-6                  ; Copy this screen line       ³
*--------------------------------------------------------------------+
         B     EXIT
EXIT8    LA    R15,8
EXIT     DS    0H
*        L     R15,RETCODE              ; get the return code.
         RETURN (14,12),RC=(15)         RETURN TO OS
         EJECT ,
         DS   0D
         LTORG
R0     EQU   0
R1     EQU   1
R2     EQU   2
R3     EQU   3
R4     EQU   4
R5     EQU   5
R6     EQU   6
R7     EQU   7
R8     EQU   8
R9     EQU   9
R10    EQU   10
R11    EQU   11
R12    EQU   12
R13    EQU   13
R14    EQU   14
R15    EQU   15
*
* Map the call to @CSR
*
@CSRPL   DSECT
@CSREYE  DS    CL4'@CSR'
DTLSZ    DS    F                  ; Dataline size for MACRO
CURPOSC  DS    F                  ; Cursor column
DATALINE DS    CL256' '           ; File data line for Edit macro.
L@CSRPL  EQU   *-@CSRPL           ; Plist size
*
* Macros
*
       PRINT GEN
       IKJTCB
       IHAPSA
       END   @CSR
