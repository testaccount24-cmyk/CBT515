doc for the REXX function ISPF logon proc enhancement
-----------------------------------------------------

- REXX function is written in assembler to do the following:
   - given the input argument (probably, userid) locate in
     either Exception table or Default table the following
     values:
      - Prefix - e.g. USR, SYS, OPS, etc.
      - Logoff flag - either 1 (logoff after exiting from ISPF) or 0.
      - Initial ISPF command as a parameter to ISPSTART.

- LOGON proc will call this exec and then determine extra allocations,
  if needed, and other changes, if needed, to a standard logon
  sequence.

- REXX function has the following components:
  - ASMSPFP        - jcl to build
  - LGN@ENT        - entry macro
  - LGN@RET        - return macro
  - LGNASML        - proc used by ASMSPFP
  - LGNSPF         - main module.
  - LGNSRCH        - macro to perform binary search in a table
  - LGNUDEFD       - data module, to define Defaults table
  - LGNUDEFE       - data module, to define exceptions table
  - LGNUDEFN       - macro to be used in the data module(s), to define
                     an entry
  - LGNUDEFP       - macro to be used in the data module(s), to
                     generate appropriate table

- Logic.
  - LGNUDEFD defaults module is built for the first character
    of a userid - the whole alphabet.
  - LGNUDEFE exception module is build for users that are exceptions,
    if, for example, you would want to exclude U user from logging
    off after exiting from ISFP.
    - see comments inside these modules for coding rules.
      Note that LGNUDEFP macro generates a table sorted in ascending
      order.

  - LGNSPF module accepts only the 1st argument, it ignores the
    rest of arguments. If no arguments are passed to the function,
    if exits with rc<>0 thus forcing the calling exec to terminate.

    First, lookup is performed in the exception data table, and if
    entry is found - rexx variables are set and function exits with
    rc=0.

    The following variables are set from the table entry:
      DU@USR    - matching user entry from either table.
                  It is either 1 character long, if defaults table
                  was used, or userid if exception table was used.
                  Note that the length of this variable is always
                  equal to 7, padded with blanks if necessary.
      DU@PFX    - prefix, always 3 bytes long.
      DU@OFF    - Y or N, logoff flag.
      DU@CMD    - initial ISPF command, for example
                  PANEL(SYS@MSTR) NOLOGO

- How to add another user.

  - if user fits the default profile (for example, userids that
    start with C'S' have prefix=SYS, logoff is set to N and the
    default command is PANEL(SYS@MSTR) NOLOGO - then nothing needs
    to be done.
  - if user does not fit the default profile, then code an entry
    in the LGNUDEFE data module describing the user's parameters),
    then run ASMSPFP job to rebuild the LGNSPF module.
    Since this module is probably placed in link-listed library,
    LLA REFRESH needs to be done to pick up the change.

- how to add an extra field.

  - fields are defined in a few places in LGNDEFN macro -
     - DUDEF - dsect to describe the table entry
     - UVARTCNT - csect to describe rexx variables that are set.
     - DUVART   - dsect to describe UVARTCNT
     - and code in the macro that adds each entry to a global array.
  - macro LGNUDEFP sorts the global array, so code will have to be
     added there for an extra element.
     If too many entries are defined, use ACTR assembler instruction
      to increase max loop counter.

  - Module LGNSPF does not have to be changed unless there is a change
    in entry processing logic.

  - change LGNUDEFD/LGNUDEFE data modules to reflect the added field
  - rebuild the LGNSPF module.
